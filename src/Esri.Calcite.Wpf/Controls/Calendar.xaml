<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ca="clr-namespace:Esri.Calcite.WPF.Helpers"
    xmlns:c="clr-namespace:Esri.Calcite.WPF">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="..\Shared\Fonts.xaml" />
        <ResourceDictionary Source="..\Shared\Sizes.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Duration x:Key="commonAnimationDuration">0:0:0.1</Duration>
    <Geometry x:Key="icon-calendar-16">M12 1v1h1v2H1V2h1V1H0v12h16V1zm1 13H1V5h12zM5 2V1h6v1zM4 0v2H3V0zm8 2V0h1v2z</Geometry>
    <Geometry x:Key="icon-chevron-left-16">M10.207 4l-4 4 4 4H8.793l-4-4 4-4z</Geometry>
    <Geometry x:Key="icon-chevron-right-16">M5.793 12l4-4-4-4h1.412l4 4-4 4z</Geometry>
    <Geometry x:Key="icon-chevron-up-16">M8 6.207l-4 4V8.793l4-4 4 4v1.412z</Geometry>
    <Geometry x:Key="icon-chevron-down-16">M8 11.207l-4-4V5.793l4 4 4-4v1.412z</Geometry>
    <Style x:Key="calendarDateHaloBase" TargetType="Rectangle">
        <Setter Property="RadiusX" Value="{StaticResource CalendarDateHighlightRadius}" />
        <Setter Property="RadiusY" Value="{StaticResource CalendarDateHighlightRadius}" />
        <Setter Property="Width" Value="{StaticResource CalendarDateHighlightSize}" />
        <Setter Property="Height" Value="{StaticResource CalendarDateHighlightSize}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Opacity" Value="0" />
    </Style>
    <Style
        x:Key="calendarMonthHaloBase"
        BasedOn="{StaticResource calendarDateHaloBase}"
        TargetType="Rectangle">
        <Setter Property="Width" Value="{StaticResource CalendarMonthYearHighlightSize}" />
        <Setter Property="Height" Value="{StaticResource CalendarMonthYearHighlightSize}" />
        <Setter Property="RadiusX" Value="{StaticResource CalendarMonthYearHighlightRadius}" />
        <Setter Property="RadiusY" Value="{StaticResource CalendarMonthYearHighlightRadius}" />
    </Style>

    <!--  Style for the days of a month.  -->
    <Style x:Key="CalendarDayButtonStyleBase" TargetType="CalendarDayButton">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Grid Cursor="{DynamicResource CalciteActionCursor}">
                        <!--  Shown below date  -->
                        <Rectangle
                            x:Name="TodayBackground"
                            Fill="{DynamicResource CalciteUIBrandPressBrush}"
                            Opacity="0"
                            Style="{StaticResource calendarDateHaloBase}" />
                        <Rectangle
                            x:Name="HighlightBackground"
                            Fill="{DynamicResource CalciteUIBackground2Brush}"
                            Style="{StaticResource calendarDateHaloBase}" />
                        <Rectangle
                            x:Name="SelectedBackground"
                            Fill="{DynamicResource CalciteUIBrandBrush}"
                            Style="{StaticResource calendarDateHaloBase}" />
                        <Rectangle x:Name="Blackout" Style="{StaticResource calendarDateHaloBase}" />
                        <!--  Date text  -->
                        <Grid x:Name="IsActiveWrapper">
                            <TextBlock
                                x:Name="NormalText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="{DynamicResource AvenirNext-Light}"
                                FontSize="{StaticResource CalendarDayButtonFontSize}"
                                Text="{Binding Day}"
                                TextAlignment="Center"
                                TextElement.Foreground="{DynamicResource CalciteUIText2Brush}" />
                            <TextBlock
                                x:Name="SelectedText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="{DynamicResource AvenirNext-Light}"
                                FontSize="{StaticResource CalendarDayButtonFontSize}"
                                Opacity="0"
                                Text="{Binding Day}"
                                TextAlignment="Center"
                                TextElement.Foreground="{DynamicResource CalciteUITextInverseBrush}" />
                        </Grid>
                        <!--  Shown on top of date  -->
                        <Rectangle
                            x:Name="DayButtonFocusVisual"
                            Fill="{DynamicResource CalciteUIBrandBrush}"
                            IsHitTestVisible="false"
                            Style="{StaticResource calendarDateHaloBase}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Blackout, today, inactive, focus, isEnabled states - not animated  -->
                        <Trigger Property="IsBlackedOut" Value="True">
                            <Setter TargetName="Blackout" Property="Opacity" Value="1" />
                            <Setter TargetName="NormalText" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SelectedText" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsInactive" Value="True">
                            <Setter TargetName="IsActiveWrapper" Property="Opacity" Value="0.4" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="DayButtonFocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="0" />
                        </Trigger>
                        <!--  Mouse and selection states - animated  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <!--  Todo: consider adding a highlight text (text-1-color) and animating that visibility as well  -->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <!--  Todo: consider adding a highlight text (text-1-color) and animating that visibility as well  -->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <!--  Todo: consider adding a highlight text (text-1-color) and animating that visibility as well  -->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <!--  Todo: consider adding a highlight text (text-1-color) and animating that visibility as well  -->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for the months of a year and years of a decade.  -->
    <Style x:Key="CalendarButtonStyle" TargetType="CalendarButton">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid Cursor="{DynamicResource CalciteActionCursor}">
                        <Rectangle
                            x:Name="HighlightBackground"
                            Fill="{DynamicResource CalciteUIBackground3Brush}"
                            Style="{StaticResource calendarMonthHaloBase}" />
                        <Rectangle
                            x:Name="PushBackground"
                            Fill="{DynamicResource CalciteUIBrandPressBrush}"
                            Style="{StaticResource calendarMonthHaloBase}" />
                        <Rectangle
                            x:Name="SelectedBackground"
                            Fill="{DynamicResource CalciteUIBrandBrush}"
                            Style="{StaticResource calendarMonthHaloBase}" />
                        <Grid x:Name="IsActiveWrapper">
                            <ContentPresenter
                                x:Name="NormalText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                TextBlock.TextAlignment="Center"
                                TextElement.FontFamily="{StaticResource AvenirNext-Light}" />
                            <ContentPresenter
                                x:Name="HighlightText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Opacity="0"
                                TextBlock.TextAlignment="Center"
                                TextElement.FontFamily="{StaticResource AvenirNext-Light}"
                                TextElement.FontSize="{StaticResource CalendarMonthButtonFontSize}" />
                            <ContentPresenter
                                x:Name="SelectedText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Opacity="0"
                                TextBlock.TextAlignment="Center"
                                TextElement.FontFamily="{StaticResource AvenirNext-Light}"
                                TextElement.FontSize="{StaticResource CalendarMonthButtonFontSize}"
                                TextElement.Foreground="{DynamicResource CalciteUIForegroundAlwaysLightBrush}" />

                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Calcite Prop triggers, not animated  -->
                        <Trigger Property="HasSelectedDays" Value="True">
                            <Setter TargetName="SelectedBackground" Property="Opacity" Value="1" />
                            <Setter TargetName="NormalText" Property="Opacity" Value="0" />
                            <Setter TargetName="SelectedText" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsInactive" Value="True">
                            <Setter TargetName="IsActiveWrapper" Property="Opacity" Value="0.4" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PushBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.8"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PushBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="{StaticResource commonAnimationDuration}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="pathButtonStyle" TargetType="{x:Type Path}">
        <Setter Property="Height" Value="{StaticResource CalendarButtonInnerPathHeight}" />
        <Setter Property="Width" Value="{StaticResource CalendarButtonInnerPathWidth}" />
        <Setter Property="Fill" Value="{DynamicResource CalciteUIText3Brush}" />
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <!--  Button to go to the next or previous month or year.  -->
    <ControlTemplate x:Key="NextPreviousButtonTemplate" TargetType="{x:Type Button}">
        <Grid
            x:Name="backgroundGrid"
            Background="{DynamicResource CalciteUIBackground1Brush}"
            Cursor="{DynamicResource CalciteActionCursor}">
            <Grid
                x:Name="HighlightBackground"
                Background="{DynamicResource CalciteUIBackground2Brush}"
                Opacity="0" />
            <Grid
                x:Name="pathGrid"
                Width="{StaticResource CalendarButtonInnerContainerWidth}"
                Height="{StaticResource CalendarButtonInnerContainerHeight}"
                Margin="{StaticResource CalendarButtonInnerContainerMargin}">
                <ContentPresenter />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="pathGrid" Property="Opacity" Value="0" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="HighlightBackground" Property="Background" Value="{DynamicResource CalciteUIBackground3Brush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="HighlightBackground"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="{StaticResource commonAnimationDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="HighlightBackground"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="{StaticResource commonAnimationDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Button to go up a level to the year or decade.  -->
    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="Transparent" Cursor="{DynamicResource CalciteActionCursor}">
            <ContentPresenter
                x:Name="buttonContent"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                TextBlock.FontFamily="{StaticResource AvenirNext-Medium}"
                TextElement.FontSize="{TemplateBinding FontSize}"
                TextElement.FontWeight="{TemplateBinding FontWeight}"
                TextElement.Foreground="{TemplateBinding Foreground}"
                TextOptions.TextFormattingMode="Ideal"
                TextOptions.TextRenderingMode="Auto" />
            <ContentPresenter
                x:Name="buttonContentHighlight"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Opacity="0"
                TextBlock.FontFamily="{StaticResource AvenirNext-Medium}"
                TextElement.FontSize="{TemplateBinding FontSize}"
                TextElement.FontWeight="{TemplateBinding FontWeight}"
                TextElement.Foreground="{DynamicResource CalciteUIBrandBrush}"
                TextOptions.TextFormattingMode="Ideal"
                TextOptions.TextRenderingMode="Auto" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="buttonContentHighlight"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="{StaticResource commonAnimationDuration}" />
                            <DoubleAnimation
                                Storyboard.TargetName="buttonContent"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="{StaticResource commonAnimationDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="buttonContentHighlight"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="{StaticResource commonAnimationDuration}" />
                            <DoubleAnimation
                                Storyboard.TargetName="buttonContent"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="{StaticResource commonAnimationDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Calendar item control template; calendar item does the heavy lifting for the overall calendar  -->
    <ControlTemplate x:Key="CalendarItemTemplate" TargetType="{x:Type CalendarItem}">
        <ControlTemplate.Resources>
            <Style x:Key="TextBlockStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="LineHeight" Value="12" />
                <Setter Property="FontFamily" Value="{DynamicResource AvenirNext-Light}" />
                <Setter Property="Foreground" Value="{DynamicResource CalciteUIText1Brush}" />
            </Style>
            <!--  TODO - adjust size for different control sizes  -->
            <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                <!--  TODO: verify linestackingstrategy is set correctly (here and throughout)  -->
                <TextBlock
                    x:Name="HeaderLabel"
                    Margin="4,8,4,12"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontFamily="{StaticResource AvenirNext-Medium}"
                    Foreground="{DynamicResource CalciteUIText2Brush}"
                    LineHeight="12"
                    LineStackingStrategy="BlockLineHeight"
                    Style="{StaticResource TextBlockStyle}"
                    Text="{Binding}"
                    TextAlignment="Center"
                    TextOptions.TextFormattingMode="Ideal"
                    TextOptions.TextRenderingMode="Aliased" />
            </DataTemplate>
        </ControlTemplate.Resources>
        <Grid
            x:Name="PART_Root"
            Width="216"
            Height="236"
            Margin="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="32" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="32" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="36" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Button
                    x:Name="PART_PreviousButton"
                    Grid.Row="0"
                    VerticalAlignment="Stretch"
                    Focusable="False"
                    Template="{StaticResource NextPreviousButtonTemplate}">
                    <!--<TextBlock Text="{StaticResource Calcite_UIIcons_Glyph_Chevron_Left_16}" FontFamily="{StaticResource Calcite-UI-Icons}"
                       />-->
                    <Path Data="{c:CalciteIconGeometry Icon=ChevronLeft, Scale=Small}" Style="{StaticResource pathButtonStyle}" />
                </Button>
                <!--  TODO - update sizes for different scales, themes  -->
                <Button
                    x:Name="PART_HeaderButton"
                    Grid.Row="0"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Focusable="False"
                    FontFamily="{TemplateBinding FontFamily}"
                    FontWeight="{TemplateBinding FontWeight}"
                    Foreground="{DynamicResource CalciteUIText1Brush}"
                    Template="{StaticResource HeaderButtonTemplate}" />
                <Button
                    x:Name="PART_NextButton"
                    Grid.Row="0"
                    Grid.Column="2"
                    Margin="0"
                    VerticalAlignment="Stretch"
                    Focusable="False"
                    Template="{StaticResource NextPreviousButtonTemplate}">
                    <Path Data="{c:CalciteIconGeometry Icon=ChevronRight, Scale=Small}" Style="{StaticResource pathButtonStyle}" />
                </Button>
                <Border
                    Grid.Row="1"
                    Grid.ColumnSpan="3"
                    BorderBrush="{DynamicResource CalciteUIBorder1Brush}"
                    BorderThickness="0,1,0,0" />
                <Grid
                    x:Name="PART_MonthView"
                    Grid.Row="2"
                    Grid.ColumnSpan="3"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Visibility="Visible">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                </Grid>
                <Grid
                    x:Name="PART_YearView"
                    Grid.Row="2"
                    Grid.ColumnSpan="3"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                </Grid>
            </Grid>
            <!--  Kept only because it is a named part; will never be shown  -->
            <Rectangle x:Name="PART_DisabledVisual" Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <!--  Implement disabled appearance  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.8" />
            </Trigger>
            <!--  Implements month/year view control  -->
            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <!--  Implements decade view option  -->
            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
        <Setter Property="Template" Value="{StaticResource CalendarItemTemplate}" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <ControlTemplate x:Key="InnerCalendarTemplate" TargetType="{x:Type Calendar}">
        <Border
            x:Name="PART_Root"
            Padding="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            ClipToBounds="True"
            CornerRadius="0">

            <CalendarItem
                x:Name="PART_CalendarItem"
                Background="{TemplateBinding Background}"
                Foreground="{TemplateBinding Foreground}"
                Style="{TemplateBinding CalendarItemStyle}" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="InnerCalendarRoundedTemplate" TargetType="{x:Type Calendar}">
        <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
            <StackPanel.Effect>
                <DropShadowEffect
                    BlurRadius="8"
                    Opacity="0.1"
                    RenderingBias="Quality"
                    ShadowDepth="4"
                    Color="Black" />
            </StackPanel.Effect>
            <Border
                Margin="8"
                Background="{TemplateBinding BorderBrush}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="0"
                CornerRadius="4">

                <Border
                    Margin="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="4">

                    <CalendarItem
                        x:Name="PART_CalendarItem"
                        Background="{TemplateBinding Background}"
                        ClipToBounds="True"
                        Foreground="{TemplateBinding Foreground}"
                        Style="{TemplateBinding CalendarItemStyle}" />
                </Border>
            </Border>
        </StackPanel>
    </ControlTemplate>

    <Style x:Key="CalciteCalendarBase" TargetType="{x:Type Calendar}">
        <Setter Property="Template" Value="{StaticResource InnerCalendarTemplate}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{DynamicResource AvenirNext-Light}" />
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonStyleBase}" />
        <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemStyle}" />
        <Setter Property="Foreground" Value="{DynamicResource CalciteUIText3Brush}" />
        <Setter Property="Background" Value="{DynamicResource CalciteUIBackground1Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CalciteUIBorder3Brush}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="ca:AttachedFormData.IsInForm" Value="True">
                <Setter Property="Margin" Value="{DynamicResource FormChildMargin}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="CalciteCalendarRound"
        BasedOn="{StaticResource CalciteCalendarBase}"
        TargetType="{x:Type Calendar}">
        <Setter Property="Template" Value="{StaticResource InnerCalendarRoundedTemplate}" />
    </Style>

</ResourceDictionary>